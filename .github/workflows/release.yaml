name: release
'on':
  workflow_dispatch: # To trigger manual build
  release:
    types: [published] # only run the workflow when a new release has been published

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Restoring node_modules from cache if found
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install node modules
        run: npm ci

  # - name: Restoring gradle from cache if found
  #   uses: actions/cache@v3
  #   with:
  #     path: |
  #       ~/.gradle/caches
  #       ~/.gradle/wrapper
  #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #     restore-keys: |
  #       ${{ runner.os }}-gradle-

  # - name: Run android app
  #   run: npm run android

  # build-ios:
  #   runs-on: macos-latest
  #   timeout-minutes: 60

  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'

  #     - name: Get npm cache directory path
  #       id: npm-cache-dir-path
  #       run: echo "::set-output name=dir::$(npm config get cache)"

  #     - name: Restoring node_modules from cache if found
  #       uses: actions/cache@v3
  #       id: npm-cache
  #       with:
  #         path: ${{ steps.npm-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-npm-
  #           ${{ runner.os }}-

  #     - name: Restoring Pods from cache if found
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ios/Pods
  #           ~/Library/Caches/CocoaPods
  #           ~/.cocoapods
  #         key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pods-

  #     - name: Install node modules
  #       run: npm ci

  #     - name: Installs pods
  #       run: cd ios && pod install

  #     # - name: Run ios app
  #     #   run: npm run ios
